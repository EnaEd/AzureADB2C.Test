@page "/fetchdata"
@using System.Text.Json
@using System.Net.Http.Headers
@inject HttpClient _Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <p>@forecasts</p>
}

@code {
    private string? forecasts;
    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set;}
    protected override async Task OnInitializedAsync()
    {
        var authenticationStateAsync =await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var token = "eyJhbGciOiJSUzI1NiIsImtpZCI6Ilg1ZVhrNHh5b2pORnVtMWtsMll0djhkbE5QNC1jNTdkTzZRR1RWQndhTmsiLCJ0eXAiOiJKV1QifQ.eyJpZHAiOiJnb29nbGUuY29tIiwic3ViIjoiYTBiZDgxN2ItYWRjNi00ZTU3LTk4NmYtZWNlMWI0MTc3NTdmIiwiZW1haWxzIjpbImRqYXppejEyMzkzQGdtYWlsLmNvbSJdLCJleHRlbnNpb25fUm9sZSI6Ik1hbmFnZXIiLCJ0ZnAiOiJCMkNfMV9ENERyaXZlcnNXaXRoTVNBIiwibm9uY2UiOiJkZDk1MTZjMC0zMzNlLTQwMDEtOGM2ZS05ZmQyYmYwNmRiZWQiLCJzY3AiOiJ0YXNrcy53cml0ZSB0YXNrcy5yZWFkIiwiYXpwIjoiMzE3ZjlmNDgtMDg0ZS00NjRjLTg4N2EtOWM1MDA5NDk4MzRjIiwidmVyIjoiMS4wIiwiaWF0IjoxNjgyNjgwNDkzLCJhdWQiOiI4YTFjOWYyYS1lMmYzLTQyYjctODI0NS1iZGRkZDc1ZmM0MjgiLCJleHAiOjE2ODI2ODQwOTMsImlzcyI6Imh0dHBzOi8vdGVzdGQ0ZHJpdmVycy5iMmNsb2dpbi5jb20vYjkwMGQ2NjQtYTc4Mi00NWVlLThlN2MtNmQ5ZmUzNjIyODI5L3YyLjAvIiwibmJmIjoxNjgyNjgwNDkzfQ.tKMQo1LHVsmYh5FHanlKjY_RGqWnU-Gh3CgYeeGa-VsEM8Gg3wccwz1XleQtu0YtnI1AkUJTArwlV39E19Rj-1Kc9jQju4xg1HSYGNHgQqAQHiE7LWlZ10rzXVqIvDNO6rSUQ2P9Lk2Yd_qb6n2kynDzoyvHJJHk4y5d6sIGkTvI8e0JhrIxX-JBWK9pFADFfB6gFLuiNIy1w7YzH1gB9S2so3JXJaFCNQcyxFuNftFhPkaob5qZAVaMYUpOJUwQUyGR43tQzWpg9QAzp0gu2NMKGiddfzqVlurVV_01GtD5OBGTE06UIN8F6057Df0NhGp2hepn2mqdQGGK4dFdCQ";
        _Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        forecasts = await (await _Http.GetAsync("hifilter")).Content.ReadAsStringAsync();
    }

}