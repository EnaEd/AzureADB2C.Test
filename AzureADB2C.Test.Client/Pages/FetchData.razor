@page "/fetchdata"
@using System.Text.Json
@using System.Net.Http.Headers
@inject HttpClient _Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <p>@forecasts</p>
}

@code {
    private string? forecasts;
    [Inject]
    private AuthenticationStateProvider AuthenticationStateProvider { get; set;}
    protected override async Task OnInitializedAsync()
    {
        var authenticationStateAsync =await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var token = "eyJhbGciOiJSUzI1NiIsImtpZCI6Ilg1ZVhrNHh5b2pORnVtMWtsMll0djhkbE5QNC1jNTdkTzZRR1RWQndhTmsiLCJ0eXAiOiJKV1QifQ.eyJpZHAiOiJnb29nbGUuY29tIiwic3ViIjoiYTBiZDgxN2ItYWRjNi00ZTU3LTk4NmYtZWNlMWI0MTc3NTdmIiwiZW1haWxzIjpbImRqYXppejEyMzkzQGdtYWlsLmNvbSJdLCJ0ZnAiOiJCMkNfMV9ENERyaXZlcnNXaXRoTVNBIiwibm9uY2UiOiJhMjYzNmM2OS1hODFiLTQxOTYtOWMzZC1kODk5OGNhMzdkMDIiLCJzY3AiOiJ0YXNrcy53cml0ZSB0YXNrcy5yZWFkIiwiYXpwIjoiMzE3ZjlmNDgtMDg0ZS00NjRjLTg4N2EtOWM1MDA5NDk4MzRjIiwidmVyIjoiMS4wIiwiaWF0IjoxNjgyNDE3OTI5LCJhdWQiOiI4YTFjOWYyYS1lMmYzLTQyYjctODI0NS1iZGRkZDc1ZmM0MjgiLCJleHAiOjE2ODI0MjE1MjksImlzcyI6Imh0dHBzOi8vdGVzdGQ0ZHJpdmVycy5iMmNsb2dpbi5jb20vYjkwMGQ2NjQtYTc4Mi00NWVlLThlN2MtNmQ5ZmUzNjIyODI5L3YyLjAvIiwibmJmIjoxNjgyNDE3OTI5fQ.QZMKg5UsK-RI80prDa8NhczAKwz2zN_-lvGn1uy0YWtdNJtsM9Mo5ULp33gj-NtnW1NI6lkVabe90uYxAVdvxD9STytCE1Jwj6Bz5H0jZbsscVsIu5M6w-5vpmaLkbg3gFpoaHuTTXuQnEWnfwwIUL_QA2Fy9BpGd6fMoz7NqS5Fi0iXYXvTpHvoqmXEqjW7lhyXu0qfrOMWJtVCEXn1tsUJUMtcBKGLNE33l86u2N1OBl9tGjf-2D3Fx32KpLQs-CT1EyF07r9xX903suCRZsJboBGrBJZcIgv-wfm6rEQhuiwMsue0l0zBHt1A5EIY-tdjSUUmsqI1e60DC_mKzg";
        _Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
        forecasts = await (await _Http.GetAsync("hi")).Content.ReadAsStringAsync();
    }

}